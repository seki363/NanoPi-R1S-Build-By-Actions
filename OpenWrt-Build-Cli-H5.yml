#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 Jolly <https://totoro.site>
# 
# <https://github.com/skytotwo/NanoPi-R1S-Build-By-Actions>
#
# Write by Jolly 2019/12/7
# last update at 2019/12/19

name: NanoPi-R1s H5 OpenWrt 19.07 Build

on:
  push:
    branches: 
      - master
  # schedule:
  #   - cron: 0 20 * * *
  # release:
  #   types: [published]

#环境变量：SSH_ACTIONS设置为true则会在执行完Costom Configure File后显示一个SSH的链接，可用终端或者web登录到vps进行配置
env:
  SSH_ACTIONS: true
  TZ: Asia/Shanghai

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          #以下这段命令是删除vps上的无用文件和软件，腾出空间供编译使用（初始可使用的空间为30G可能不够）
          docker rmi `docker images -q`
          echo "Deleting files, please wait ..."
          sudo rm -rf \
            /usr/share/dotnet \
            /etc/mysql \
            /etc/php
          sudo -E apt-get -y purge \
            azure-cli \
            ghc* \
            zulu* \
            hhvm \
            llvm* \
            firefox \
            google* \
            dotnet* \
            powershell \
            openjdk* \
            mysql* \
            php*
          #安装编译所需要的软件，安装编译环境
          sudo -E apt-get update
          sudo -E apt-get -y install bc build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex node-uglify gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler libuv-dev
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash         
          
      - name: Install Repo
        run: |
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/
          
      - name: Download Source
        run: |
          mkdir friendlywrt-h5
          cd friendlywrt-h5
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v19.07.1 -m h5.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle
      
      - name: Merge UpStearm OpenWrt
        run: |
          cd friendlywrt-h5
          cd .repo/manifests
          rm -f ./h5.xml
          wget https://raw.githubusercontent.com/skytotwo/NanoPi-R1S-Build-By-Actions/master/source_xml/h5_19.07.xml
          cp h5_19.07.xml h5.xml
          rm -rf ./h5_19.07.xml
          repo sync -c  --no-clone-bundle
      
      - name: Merge LEDE
        run: |
          cd friendlywrt-h5
          git clone https://github.com/coolsnowwolf/lede
          cd friendlywrt
          cp -r ../lede/package/lean package/
          sed -i 's/https:\/\/github.com\/friendlyarm\/friendlywrt_project_luci^81580a3307e5a723ec4c01783de24e8e28c8cbd8/https:\/\/github.com\/coolsnowwolf\/luci/' feeds.conf.default
          sed -i 's/https:\/\/github.com\/friendlyarm\/friendlywrt_project_packages^5b22f3f59c03412200fe4815d833943f953edf2b/https:\/\/github.com\/coolsnowwolf\/packages/' feeds.conf.default   
          
      - name: Custom Applications
        run: |
          cd friendlywrt-h5/friendlywrt/package
          git clone https://github.com/Baozisoftware/luci-app-koolproxy
          
      - name: Update Target.mk
        run: |
          cd friendlywrt-h5/friendlywrt/include 
          sed -i 's/dnsmasq /dnsmasq-full default-settings luci /' target.mk    
          
      - name: Update Feeds
        run: |
          cd friendlywrt-h5/friendlywrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
      - name: Costom Configure File
        run: |
          cd friendlywrt-h5/friendlywrt
          rm -f ./.config*
          wget https://raw.githubusercontent.com/skytotwo/NanoPi-R1S-Build-By-Actions/master/r1s-h5-config
          cp r1s-h5-config .config

      #如果环境变量设置为true,执行到此步骤时会弹出几行信息，上面有ssh的命令和https的链接，可选择在终端通过ssh链接修改配置或者通过web连接修改
      - name: SSH connection to Actions
        uses: P3TERX/debugger-action@master
        if: env.SSH_ACTIONS == 'true'
      
      - name: Download package
        if: always()
        run: |
          cd friendlywrt-h5/friendlywrt
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;
          
      - name: Build OpenWrt
        run: |
          cd friendlywrt-h5
          ./build.sh nanopi_r1s.mk
      
      - name: Zip Files
        run: |
          find friendlywrt-h5/out/ -name "FriendlyWrt_*img*" | xargs -i zip -r {}.zip {}
          
      - name: Assemble Artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find friendlywrt-h5/out/ -name "FriendlyWrt_*img.zip*" | xargs -i mv -f {} ./artifact/
      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: FriendlyWrt_NanoPi-R1S H5 v19.07
          path: ./artifact/
